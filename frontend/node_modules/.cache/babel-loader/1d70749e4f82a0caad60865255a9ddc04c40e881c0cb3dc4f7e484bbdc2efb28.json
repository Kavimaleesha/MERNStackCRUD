{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming Languages\\\\MERNStackCRUD\\\\frontend\\\\src\\\\Components\\\\SendPDF\\\\PdfComp.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PdfComp(props) {\n  _s();\n  const [numPages, setNumPages] = useState();\n  const [pageNumber, setPageNumber] = useState(1);\n  function onDocumentLoadSuccess({\n    numPages\n  }) {\n    setNumPages(numPages);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [props.pdfFile, \" ? (\", /*#__PURE__*/_jsxDEV(Document, {\n        file: props.pdfFile,\n        onLoadSuccess: onDocumentLoadSuccess,\n        children: [Array.apply(null, Array(numPages)).map((x, i) => i + 1).map(page => {\n          return /*#__PURE__*/_jsxDEV(Page, {\n            pageNumber: page,\n            renderTextLayer: false,\n            renderAnnotationLayer: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: pageNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 10\n      }, this), \") : (\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Pdf File Not Availabele\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), \");\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Page \", pageNumber, \" of \", numPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(PdfComp, \"gk3reyvzCRgX/TjORsZZAkDBClA=\");\n_c = PdfComp;\nexport default PdfComp;\nvar _c;\n$RefreshReg$(_c, \"PdfComp\");","map":{"version":3,"names":["React","useState","Document","Page","jsxDEV","_jsxDEV","PdfComp","props","_s","numPages","setNumPages","pageNumber","setPageNumber","onDocumentLoadSuccess","children","pdfFile","file","onLoadSuccess","Array","apply","map","x","i","page","renderTextLayer","renderAnnotationLayer","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Programming Languages/MERNStackCRUD/frontend/src/Components/SendPDF/PdfComp.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport { Document, Page } from 'react-pdf';\r\n\r\nfunction PdfComp(props) {\r\n    const [numPages, setNumPages] = useState();\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n  \r\n    function onDocumentLoadSuccess({ numPages }) {\r\n      setNumPages(numPages);\r\n    }\r\n  return (\r\n    <div>\r\n        <div>\r\n            {props.pdfFile} ? (\r\n         <Document file={props.pdfFile} onLoadSuccess={onDocumentLoadSuccess}>\r\n           {Array.apply(null, Array(numPages))\r\n           .map((x,i) => i + 1)\r\n           .map((page) => {\r\n            return (\r\n                <Page\r\n                pageNumber={page}\r\n                renderTextLayer={false}\r\n                renderAnnotationLayer={false}\r\n                />\r\n            );\r\n           })}\r\n           \r\n        <Page pageNumber={pageNumber} />\r\n      </Document>\r\n        ) : (\r\n            <p>Pdf File Not Availabele</p>\r\n        );\r\n      <p>\r\n        Page {pageNumber} of {numPages}\r\n      </p>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PdfComp\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,EAAEC,IAAI,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAC1C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAE/C,SAASY,qBAAqBA,CAAC;IAAEJ;EAAS,CAAC,EAAE;IAC3CC,WAAW,CAACD,QAAQ,CAAC;EACvB;EACF,oBACEJ,OAAA;IAAAS,QAAA,eACIT,OAAA;MAAAS,QAAA,GACKP,KAAK,CAACQ,OAAO,EAAC,MAClB,eAAAV,OAAA,CAACH,QAAQ;QAACc,IAAI,EAAET,KAAK,CAACQ,OAAQ;QAACE,aAAa,EAAEJ,qBAAsB;QAAAC,QAAA,GACjEI,KAAK,CAACC,KAAK,CAAC,IAAI,EAAED,KAAK,CAACT,QAAQ,CAAC,CAAC,CAClCW,GAAG,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CACnBF,GAAG,CAAEG,IAAI,IAAK;UACd,oBACIlB,OAAA,CAACF,IAAI;YACLQ,UAAU,EAAEY,IAAK;YACjBC,eAAe,EAAE,KAAM;YACvBC,qBAAqB,EAAE;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAEP,CAAC,CAAC,eAELxB,OAAA,CAACF,IAAI;UAACQ,UAAU,EAAEA;QAAW;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,SAEL,eAAAxB,OAAA;QAAAS,QAAA,EAAG;MAAuB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,MAEpC,eAAAxB,OAAA;QAAAS,QAAA,GAAG,OACI,EAACH,UAAU,EAAC,MAAI,EAACF,QAAQ;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACrB,EAAA,CAnCQF,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAqChB,eAAeA,OAAO;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}