{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming Languages\\\\MERNStackCRUD\\\\frontend\\\\src\\\\Components\\\\SendPDF\\\\SendPDF.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Nav from '../Nav/Nav';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SendPDF() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [file, saveFile] = useState('');\n  const [allPdf, setAllPdf] = useState('');\n  useEffect(() => {\n    getpdf();\n  }, []);\n  const getpdf = async () => {\n    const result = await axios.get('http://localhost:5000/getFile');\n    console.log(result.data.data);\n    setAllPdf(result.data.data);\n  };\n  const submitPdf = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('file', file);\n    console.log(title, file);\n    try {\n      const result = await axios.post('http://localhost:5000/uploadefile', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(result);\n      if (result.data.status === 200) {\n        alert('Pdf Uploaded');\n        getpdf();\n      } else {\n        alert('Pdf Not Uploaded');\n      }\n    } catch (error) {\n      console.error(\"Error Uploading : \" + error.message);\n      alert(\"Error Uploading : \");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Send Pdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitPdf,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"PDF Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select PDF File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"application/pdf\",\n        onChange: e => saveFile(e.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(SendPDF, \"QHrRc7E6HY6w7UT/8ojN+y1Q/6o=\");\n_c = SendPDF;\nexport default SendPDF;\nvar _c;\n$RefreshReg$(_c, \"SendPDF\");","map":{"version":3,"names":["React","useEffect","Nav","axios","jsxDEV","_jsxDEV","SendPDF","_s","title","setTitle","useState","file","saveFile","allPdf","setAllPdf","getpdf","result","get","console","log","data","submitPdf","e","preventDefault","formData","FormData","append","post","headers","status","alert","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","required","type","onChange","target","value","accept","files","_c","$RefreshReg$"],"sources":["D:/Programming Languages/MERNStackCRUD/frontend/src/Components/SendPDF/SendPDF.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport Nav from '../Nav/Nav'\r\nimport axios from 'axios'\r\n\r\nfunction SendPDF() {\r\n    const [title, setTitle] = useState('');\r\n    const [file, saveFile] = useState('');\r\n    const [allPdf, setAllPdf] = useState('');\r\n\r\n    useEffect(() => {\r\n        getpdf();\r\n    },[]);\r\n\r\n    const getpdf = async () => {\r\n        const result = await axios.get('http://localhost:5000/getFile');\r\n        console.log(result.data.data);   \r\n        setAllPdf(result.data.data); \r\n    }\r\n\r\n    const submitPdf = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append('title', title);\r\n        formData.append('file', file);\r\n        console.log(title,file);\r\n    \r\n\r\n    try{\r\n        const result = await axios.post(\r\n            'http://localhost:5000/uploadefile',\r\n        formData,{\r\n            headers: {'Content-Type': 'multipart/form-data'},\r\n        }\r\n    );\r\n        console.log(result);\r\n\r\n            if(result.data.status === 200){\r\n                alert('Pdf Uploaded');\r\n                getpdf();\r\n            }else{\r\n                alert('Pdf Not Uploaded');\r\n            }\r\n        }catch(error){\r\n            console.error(\"Error Uploading : \" + error.message);\r\n            alert(\"Error Uploading : \");\r\n        }\r\n    };\r\n  return (\r\n    <div>\r\n    <Nav/>\r\n      <h1>Send Pdf</h1>\r\n      <form onSubmit={submitPdf}>\r\n        <label>PDF Title</label>\r\n        <br></br>\r\n        <input \r\n            required \r\n            type='text'\r\n            onChange={(e) => setTitle(e.target.value)}\r\n        ></input>\r\n        <br></br>\r\n        <br></br>\r\n        <label>Select PDF File</label>\r\n        <br></br>\r\n        <input \r\n            type=\"file\" \r\n            accept='application/pdf' \r\n            onChange={(e) => saveFile(e.target.files[0])} \r\n            required\r\n        ></input>\r\n        <br></br>\r\n        <br></br>\r\n        <button>Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}  \r\n\r\nexport default SendPDF;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}