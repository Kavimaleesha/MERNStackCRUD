{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming Languages\\\\MERNStackCRUD\\\\frontend\\\\src\\\\Components\\\\SendPDF\\\\SendPDF.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Nav from '../Nav/Nav';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport PdfComp from './PdfComp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = new URL('pdfjs-dist/build/pdf.worker.min.mjs', import.meta.url).toString();\nfunction SendPDF() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [file, saveFile] = useState('');\n  const [allPdf, setAllPdf] = useState(null);\n  const [pdfFile, setPdfFile] = useState(null);\n  useEffect(() => {\n    getpdf();\n  }, []);\n  const getpdf = async () => {\n    const result = await axios.get('http://localhost:5000/getFile');\n    console.log(result.data.data);\n    setAllPdf(result.data.data);\n  };\n  const submitPdf = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('file', file);\n    console.log(title, file);\n    try {\n      const result = await axios.post('http://localhost:5000/uploadfile', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(result);\n      if (result.data.status === 200) {\n        alert('Pdf Uploaded');\n        getpdf();\n      } else {\n        alert('Pdf Not Uploaded');\n      }\n    } catch (error) {\n      console.error(\"Error Uploading : \" + error.message);\n      alert(\"Error Uploading : \");\n    }\n  };\n  const showPdf = pdf => {\n    setPDFFile(\"http://localhost:5000/files/${pdf}\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Send Pdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitPdf,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"PDF Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select PDF File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"application/pdf\",\n        onChange: e => saveFile(e.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(SendPDF, \"LZn3c0hMsEg3O/DIJBO4jfs719c=\");\n_c = SendPDF;\nexport default SendPDF;\nvar _c;\n$RefreshReg$(_c, \"SendPDF\");","map":{"version":3,"names":["React","useEffect","Nav","axios","useState","PdfComp","jsxDEV","_jsxDEV","pdfjs","GlobalWorkerOptions","workerSrc","URL","import","meta","url","toString","SendPDF","_s","title","setTitle","file","saveFile","allPdf","setAllPdf","pdfFile","setPdfFile","getpdf","result","get","console","log","data","submitPdf","e","preventDefault","formData","FormData","append","post","headers","status","alert","error","message","showPdf","pdf","setPDFFile","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","required","type","onChange","target","value","accept","files","_c","$RefreshReg$"],"sources":["D:/Programming Languages/MERNStackCRUD/frontend/src/Components/SendPDF/SendPDF.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport Nav from '../Nav/Nav';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport PdfComp from './PdfComp';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = new URL(\r\n    'pdfjs-dist/build/pdf.worker.min.mjs',\r\n    import.meta.url,\r\n  ).toString();\r\n\r\nfunction SendPDF() {\r\n    const [title, setTitle] = useState('');\r\n    const [file, saveFile] = useState('');\r\n    const [allPdf, setAllPdf] = useState(null);\r\n    const [pdfFile, setPdfFile] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getpdf();\r\n    },[]);\r\n\r\n    const getpdf = async () => {\r\n        const result = await axios.get('http://localhost:5000/getFile');\r\n        console.log(result.data.data);   \r\n        setAllPdf(result.data.data); \r\n    }\r\n\r\n    const submitPdf = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append('title', title);\r\n        formData.append('file', file);\r\n        console.log(title,file);\r\n    \r\n\r\n    try{\r\n        const result = await axios.post(\r\n            'http://localhost:5000/uploadfile',\r\n        formData,{\r\n            headers: {'Content-Type': 'multipart/form-data'},\r\n        }\r\n    );\r\n        console.log(result);\r\n\r\n            if(result.data.status === 200){\r\n                alert('Pdf Uploaded');\r\n                getpdf();\r\n            }else{\r\n                alert('Pdf Not Uploaded');\r\n            }\r\n        }catch(error){\r\n            console.error(\"Error Uploading : \" + error.message);\r\n            alert(\"Error Uploading : \");\r\n        }\r\n    };\r\n    const showPdf = (pdf) => {\r\n        setPDFFile(\"http://localhost:5000/files/${pdf}\");\r\n    };\r\n  return (\r\n    <div>\r\n    <Nav/>\r\n      <h1>Send Pdf</h1>\r\n      <form onSubmit={submitPdf}>\r\n        <label>PDF Title</label>\r\n        <br></br>\r\n        <input \r\n            required \r\n            type='text'\r\n            onChange={(e) => setTitle(e.target.value)}\r\n        ></input>\r\n        <br></br>\r\n        <br></br>\r\n        <label>Select PDF File</label>\r\n        <br></br>\r\n        <input \r\n            type=\"file\" \r\n            accept='application/pdf' \r\n            onChange={(e) => saveFile(e.target.files[0])} \r\n            required\r\n        ></input>\r\n        <br></br>\r\n        <br></br>\r\n        <button>Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}  \r\n\r\nexport default SendPDF;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}